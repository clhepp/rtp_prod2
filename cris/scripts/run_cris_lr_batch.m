function run_cris_lr_batch()
set_process_dirs;
addpath(genpath(rtp_sw_dir));

% grab the slurm array index for this process
slurmindex = str2num(getenv('SLURM_ARRAY_TASK_ID'));   % 0-19999

% offset slurmindex to bypass MaxArraySize boundary
%slurmindex = slurmindex + 19999;  % 20000-39999
%slurmindex = slurmindex + 19999;  % 40000-59999
%slurmindex = slurmindex + 19999;  % 60000-79999

% run data in 30 granule chunks to get around MaxArraySize
% boundary AND better utilize the cluster
chunk = 60;
%chunk=3;
for i = 1:chunk
    fileindex = (slurmindex*chunk) + i;
    % File ~/cris-files-process.txt is a list of filepaths to the input
    % files or this processing. For the initial runs, this was
    % generated by a call to 'ls' while sitting in the directory
    % /asl/data/cris/ccast/sdr60_hr/2015: 
    %    ls -d1 $PWD/{048,049,050}/*.mat >> ~/cris-files-process.txt
    %
    % cris-files-process.txt, then, contains lines like:
    %    /asl/data/cris/ccast/sdr60_hr/2015/048/SDR_d20150217_t1126169.mat
    [status, infile] = system(sprintf('sed -n "%dp" %s | tr -d "\n"', ...
                                      fileindex, cris_ccast_file_list));

    % separate out parts of file path. We want to keep the bulk of the
    % filename intact but change SDR -> rtp and change the extension to
    % rtp as well as we make the output file path
    [path, name, ext] = fileparts(infile);
% $$$ C = strsplit(path, '/');
% $$$ t = numel(C);
% $$$ sYear = C{t-1};
% $$$ sDoy = C{t};
% $$$ outpath = fullfile(cris_ccast_rtp_out_dir, sYear, sDoy);
% $$$ mkdir(outpath);
% $$$ outfile = fullfile(outpath, strrep(name, 'SDR', 'rtp'));
    outfile = strrep(name, 'SDR', 'rtp');

    % call the processing function
    try
        create_cris_ccast_lowres_rtp(infile, outfile)
    catch
        fprintf(2, '>>> ERROR :: Processing failed for granule %s\n', ...
                infile);
    end

end  % end chunk loop