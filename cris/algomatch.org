* CRiS rtp file (as generated by create_cris_ccast_hires_rtp.m)
  - rtp_d20150217_t0902177.rtp
    has rtime and rcalc fields, lat/lon, x/atrack (among MANY others)
    
** rtime(1)

ans =

   1.8029e+09

   - rtime(1:9) all have same time. rtime is in 9 obs blocks with same
     rtime but there is 0.2000 difference between successive bocks of
     9

     rtime(2)-rtime(1)

ans =

     0

>> rtime(10)-rtime(9)

ans =

    0.2000

datetime(1958,1,1,0,0,rtime(1))

ans = 

   17-Feb-2015 09:02:52

>> datetime(1958,1,1,0,0,rtime(2))

ans = 

   17-Feb-2015 09:02:52

>> datetime(1958,1,1,0,0,rtime(10))

ans = 

   17-Feb-2015 09:02:53

   - so, datetime(1958,1,1,0,0,rtime) here gives a datetime consistent
     with the filename but about 40 second ahead of the filename.


* CRiS algo files
  - trying to match data in rtp_d20150217_t0902177.rtp
  - There are two sets of files in the 0902 time range for this date:
    ls *_t0902*
GCRSO_npp_d20150217_t0902179_e0902477_b17138_c20150217171330081411_star_f01.h5
GCRSO_npp_d20150217_t0902499_e0903197_b17138_c20150217171333690080_star_f01.h5
SCRIS_npp_d20150217_t0902179_e0902477_b17138_c20150217171329964868_star_f01.h5
SCRIS_npp_d20150217_t0902499_e0903197_b17138_c20150217171333578197_star_f01.h5

  - GCRSO have ancillary data (times, lat/lon, etc)
    SCRIPS files have the hard data: radiances, etc

    
  - read GCRSO files
    [geo, gat1] = read_GCRSO('GCRSO_npp_d20150217_t0902179_e0902477_b17138_c20150217171330081411_star_f01.h5');
>> ftime= geo.FORTime;
>> ftime(1)

ans =

     1802854972984111

>> ftime(2)

ans =

     1802854973184111

>> ftime(2)-ftime(1)

ans =

               200000

   - converting FORTime to rtime by (rtime = FORTime*1e-6) (like
     ccast2rtp.m prof.rtime = reshape(ones(9,1) *
     iet2tai(geo.FORTime(:))', 1, nobs);) we seem to get matching times right off the bat:

     (ftime(1)*1e-6) - rtime(1)

ans =

                    0

>> (ftime(2)*1e-6) - rtime(1)

ans =

                    0

>> (ftime(3)*1e-6) - rtime(1)

ans =

                    0

>> (ftime(10)*1e-6) - rtime(1)

ans =

                    2

** can I simply use tai2iet(rtime) to go from rtp to GCRSO time? and then compare?

** switched input files from ~0900 to ~2100
>> rtimes = p.rtime

>> trtimes = tai2iet(rtimes)

>> datetime(1958,1,1,0,0,trtimes(1))

ans = 

   57133541 CE

>> datetime(1958,1,1,0,0,rtimes(1))

ans = 

   17-Feb-2015 21:10:44

>> who

Your variables are:

ans      h        ha       p        pa       rtimes   trtimes  

>> [h,ha,p,pa] = rtpread('rtp_d20150217_t2110136.rtp')'


** datestr
   - making parts of the SDR filename so we can search for the file
     that contains the time of the obs in question.
     
     tt = datetime(1958,1,1,0,0,rtimes(1));
     format = 'yyyymmdd';
     dstr = datestr(tt,format);

     format = 'HH';
     hstr = datestr(tt,format);

     searchstr = sprintf('SCRIPS_npp_d%s_t%s*.h5', dstr, hstr);
     sfiles = dir(fullfile(apath, searchstr));

** find the file which contains the time seen in tt

   format = 'HHMMSS';
   stime = datestr(tt, format);

   nfiles = length(sfiles);
   for i = 1:nfiles
      tstart = str2num(sfiles(i).name(22:27));
      tend = str2num(sfiles(i).name(31:36));

      if (stime > tstart) & (stime < tend)
         % time of observation is within this file
	 
	 % read file and find data point
	 
	 break;
      end
    end
